basePath: '{{.BasePath}}'
definitions:
  model.Chapter:
    properties:
      created:
        type: string
      id:
        type: integer
      link:
        type: string
      manga_id:
        type: integer
      status:
        type: boolean
      title:
        type: string
      total:
        type: integer
      updated:
        type: string
    type: object
  model.ChapterList:
    items:
      properties:
        created:
          type: string
        id:
          type: integer
        link:
          type: string
        manga_id:
          type: integer
        status:
          type: boolean
        title:
          type: string
        total:
          type: integer
        updated:
          type: string
      type: object
    type: array
  model.ChapterRow:
    properties:
      link:
        type: string
      title:
        type: string
    type: object
  model.ChapterRowList:
    items:
      properties:
        link:
          type: string
        title:
          type: string
      type: object
    type: array
  model.Manga:
    properties:
      alias:
        type: string
      author:
        type: string
      cover:
        type: string
      created:
        type: string
      id:
        type: integer
      intro:
        type: string
      link:
        type: string
      name:
        type: string
      source:
        type: integer
      updated:
        type: string
    type: object
  model.MangaDetail:
    properties:
      alias:
        type: string
      author:
        type: string
      chapters:
        items:
          $ref: '#/definitions/model.Chapter'
        type: array
      cover:
        type: string
      created:
        type: string
      id:
        type: integer
      intro:
        type: string
      link:
        type: string
      name:
        type: string
      source:
        type: integer
      updated:
        type: string
    type: object
host: '{{.Host}}'
info:
  contact: {}
  license: {}
  title: kindleM API
  version: 0.0.1
paths:
  /chapters:
    get:
      parameters:
      - description: ' '
        in: query
        name: manga_url
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MangaDetail'
            type: object
      summary: get manga chapter list
  /download:
    get:
      parameters:
      - description: ' '
        in: body
        name: download_list
        required: true
        schema:
          $ref: '#/definitions/model.ChapterRowList'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChapterList'
            type: object
      summary: download chapter list
  /search/{query}:
    get:
      operationId: search-manga
      parameters:
      - description: ' '
        in: path
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Manga'
            type: object
      summary: search manga
swagger: "2.0"
