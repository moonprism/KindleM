basePath: '{{.BasePath}}'
definitions:
  model.Chapter:
    properties:
      count:
        type: integer
      created:
        type: string
      id:
        type: integer
      index:
        type: integer
      link:
        type: string
      manga_id:
        type: integer
      title:
        type: string
      total:
        type: integer
      updated:
        type: string
    type: object
  model.ChapterIdList:
    items: {}
    type: array
  model.ChapterList:
    items:
      properties:
        count:
          type: integer
        created:
          type: string
        id:
          type: integer
        index:
          type: integer
        link:
          type: string
        manga_id:
          type: integer
        title:
          type: string
        total:
          type: integer
        updated:
          type: string
      type: object
    type: array
  model.ChapterRow:
    properties:
      index:
        type: integer
      link:
        type: string
      manga_id:
        type: integer
      title:
        type: string
    type: object
  model.ChapterRowList:
    items:
      properties:
        index:
          type: integer
        link:
          type: string
        manga_id:
          type: integer
        title:
          type: string
      type: object
    type: array
  model.Manga:
    properties:
      alias:
        type: string
      author:
        type: string
      cover:
        type: string
      created:
        type: string
      id:
        type: integer
      intro:
        type: string
      link:
        type: string
      name:
        type: string
      source:
        type: integer
      updated:
        type: string
    type: object
  model.MangaDetail:
    properties:
      ChapterList:
        items:
          properties:
            count:
              type: integer
            created:
              type: string
            id:
              type: integer
            index:
              type: integer
            link:
              type: string
            manga_id:
              type: integer
            title:
              type: string
            total:
              type: integer
            updated:
              type: string
          type: object
        type: array
      alias:
        type: string
      author:
        type: string
      cover:
        type: string
      created:
        type: string
      id:
        type: integer
      intro:
        type: string
      link:
        type: string
      name:
        type: string
      source:
        type: integer
      updated:
        type: string
    type: object
  model.MangaDetailList:
    items:
      properties:
        ChapterList:
          items:
            properties:
              count:
                type: integer
              created:
                type: string
              id:
                type: integer
              index:
                type: integer
              link:
                type: string
              manga_id:
                type: integer
              title:
                type: string
              total:
                type: integer
              updated:
                type: string
            type: object
          type: array
        alias:
          type: string
        author:
          type: string
        cover:
          type: string
        created:
          type: string
        id:
          type: integer
        intro:
          type: string
        link:
          type: string
        name:
          type: string
        source:
          type: integer
        updated:
          type: string
      type: object
    type: array
  model.MangaInfo:
    properties:
      ChapterRowList:
        items:
          properties:
            index:
              type: integer
            link:
              type: string
            manga_id:
              type: integer
            title:
              type: string
          type: object
        type: array
      alias:
        type: string
      author:
        type: string
      cover:
        type: string
      created:
        type: string
      id:
        type: integer
      intro:
        type: string
      link:
        type: string
      name:
        type: string
      source:
        type: integer
      updated:
        type: string
    type: object
  model.Mobi:
    properties:
      author:
        type: string
      cover:
        type: string
      created:
        type: string
      id:
        type: integer
      processInfo:
        type: string
      title:
        type: string
      updated:
        type: string
    type: object
  model.MobiInfo:
    properties:
      author:
        type: string
      chapter_id_list:
        $ref: '#/definitions/model.ChapterIdList'
        description: swag wtf?
        type: object
      cover:
        type: string
      title:
        type: string
    type: object
  model.Picture:
    properties:
      chapterId:
        type: integer
      created:
        type: string
      id:
        type: integer
      index:
        type: integer
      mangaId:
        type: integer
      referer:
        type: string
      src:
        type: string
      status:
        type: boolean
      updated:
        type: string
    type: object
  model.PictureList:
    items:
      properties:
        chapterId:
          type: integer
        created:
          type: string
        id:
          type: integer
        index:
          type: integer
        mangaId:
          type: integer
        referer:
          type: string
        src:
          type: string
        status:
          type: boolean
        updated:
          type: string
      type: object
    type: array
  model.ProcessCount:
    properties:
      chromedp:
        type: integer
      picture:
        type: integer
    type: object
host: '{{.Host}}'
info:
  contact: {}
  license: {}
  title: kindleM API
  version: 0.0.1
paths:
  /chapters:
    get:
      parameters:
      - description: ' '
        in: query
        name: manga_url
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MangaInfo'
            type: object
      summary: get manga chapter list
  /check/chapter/{chapter_id}:
    post:
      parameters:
      - description: ' '
        in: path
        name: chapter_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PictureList'
            type: object
      summary: check chapter all picture download again
  /count/process:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProcessCount'
            type: object
      summary: CountProcess
  /download:
    post:
      parameters:
      - description: ' '
        in: body
        name: download_list
        required: true
        schema:
          $ref: '#/definitions/model.ChapterRowList'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChapterList'
            type: object
      summary: download chapter list
  /manga:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MangaDetailList'
            type: object
      summary: download manga list
  /manga/generate:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: mobi_info
        required: true
        schema:
          $ref: '#/definitions/model.MobiInfo'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Mobi'
            type: object
      summary: generate manga
  /search/{query}:
    get:
      operationId: search-manga
      parameters:
      - description: ' '
        in: path
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Manga'
            type: object
      summary: search manga
swagger: "2.0"
